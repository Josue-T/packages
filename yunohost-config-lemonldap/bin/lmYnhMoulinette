#!/usr/bin/perl

use Lemonldap::NG::Common::Conf;
use Lemonldap::NG::Common::Conf::Constants;
use Data::Dumper;
use POSIX qw(setuid setgid);
use strict;

#Le script sera exécuté en tant que www-data
eval {
    setgid( ( getgrnam('www-data') )[2] );
    setuid( ( getpwnam('www-data') )[2] );
#    print STDERR "Running as uid $> and gid $)\n";
};

#On génère 2 nom de fichiers temporaires ref et edit
our $refFile  = `mktemp`;
our $editFile = `mktemp`;

chomp $refFile;
chomp $editFile;

#on vérifie que l'user courant n'est pas root
if ( $> == 0 ) {
    print STDERR
      "$0 must not be launched as root since local cache can be corrupted\n"
      . "Continue (y/N)? ";
    my $res = <STDIN>;
    exit 1 unless ( $res =~ /^y/i );
}

#On crée un objet Conf
my $conf = Lemonldap::NG::Common::Conf->new();

unless ($conf) {
    print STDERR $Lemonldap::NG::Common::Conf::msg;
    exit 1;
}

#On charge un tampon pour le fichier ref dans F1
open F1, ">$refFile"  or quit($!);
#On charge un tampon pour le fichier edit dans F2
open F2, ">$editFile" or quit($!);

#On charge la conf dans la variable $tmp
my $tmp = $conf->getConf();
#On efface les infos de version
delete $tmp->{reVHosts};
delete $tmp->{cipher};
delete $tmp->{cfgAuthor};
delete $tmp->{cfgAuthorIP};
delete $tmp->{cfgDate};

#On recharge le tableau
my $refdump = Dumper($tmp);

#On place le contenu de $tmp dans le ficher "ref"
print F1 $refdump;

#On modifie le fichier edit par le code
my $editbuf = "";
open F3, "/tmp/tmplemonconf";
while (<F3>) {
    $editbuf .= $_;
}
close F3;
eval $editbuf;

#On recharge le tableau
$tmp = Dumper($tmp);

#On place le contenu de $tmp dans le ficher "edit"
print F2 $tmp;

#On ferme les tampons des fichiers
close F1;
close F2;

#le fichier edit est déjà modifié selon les besoins
#system "editor $editFile";

#Si le fichier édité est différent du fichier ref
if (`diff $refFile $editFile`) {
    my $VAR1;
    my $buf;

    # Check if the new configuration hash is valid
    open F1, $editFile;
    while (<F1>) {
        $buf .= $_;
    }
#    close F1;
#    open F1, "/tmp/myscript";
#    while (<F1>) {
#        $buf .= $_;
#    }
#    close F1;
    eval $buf;
    quit($@) if ($@);

    # Update author and date
    $VAR1->{cfgAuthor}   = "lmConfEditor";
    $VAR1->{cfgAuthorIP} = "localhost";
    $VAR1->{cfgDate}     = time();

    # Store new configuration
    my $res = $conf->saveConf($VAR1);
    if ( $res > 0 ) {
        print STDERR "Lemonldap:NG configuration file $res saved\n";
    }
    else {
        print STDERR "Configuration was not saved:\n  ";
        if ( $res == CONFIG_WAS_CHANGED ) {
            print STDERR "Configuration has changed\n";
        }
        elsif ( $res == DATABASE_LOCKED ) {
            print STDERR "Configuration database is or can nor be locked\n";
        }
        elsif ( $res == UPLOAD_DENIED ) {
            print STDERR "You're not authorized to save this configuration\n";
        }
        elsif ( $res == SYNTAX_ERROR ) {
            print STDERR "Syntax error in your configuration\n";
        }
        elsif ( $res == UNKNOWN_ERROR ) {
            print STDERR "Unknown error\n";
        }
    }
}
else {
    print STDERR "Configuration not changed\n";
}

#unlink $editFile;
unlink $refFile;

sub quit {
    unlink $editFile;
    unlink $refFile;
    print STDERR "$_[0]\n";
    exit 1;
}
